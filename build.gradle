buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

plugins {
    id 'java'
    id 'application'
    // shadow jar plugin
    id 'com.github.johnrengelman.shadow' version '4.0.1'
    id 'com.jfrog.artifactory' version '4.7.5'
}

repositories {
    mavenCentral()
}

version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'io.dropwizard:dropwizard-core:1.3.8'
    compile 'io.dropwizard:dropwizard-client:1.3.8'
    compile 'org.mongodb:mongodb-driver-sync:3.8.2'
    compile 'com.smoketurner:dropwizard-swagger:1.0.6-1'
    compile 'io.dropwizard:dropwizard-testing:1.3.8'
    compile 'org.mockito:mockito-core:2.23.4'
    compile group: 'org.parboiled', name: 'parboiled-java', version: '1.0.2'
    compile group: 'redis.clients', name: 'jedis', version: '3.0.1'
    compileOnly 'org.projectlombok:lombok:1.18.8'
}

// Define the main class for the application
mainClassName = 'com.blocities.customerbiller.StarterServiceApplication'

// enable named parameters option (for use with jackson java8 modules)
compileJava {
    options.compilerArgs << '-parameters'
}

shadowJar {
    mergeServiceFiles()
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

task resolveDependencies {
    setDescription "Resolves all projects dependencies from the repository."
    setGroup "Build Server"
    doLast {
        rootProject.allprojects { project ->
            project.buildscript.configurations.forEach { configuration ->
                if (configuration.canBeResolved) {
                    configuration.resolve()
                }
            }
            project.configurations.forEach { configuration ->
                if (configuration.canBeResolved) {
                    configuration.resolve()
                }
            }
        }
    }
}